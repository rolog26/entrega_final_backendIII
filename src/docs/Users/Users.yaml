paths:
  /api/users/:
    get:
      summary: Obtener todos los usuarios
      tags:
        - Users
      responses:
        '200':
          description: 'Lista de usuarios'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '500':
          description: 'Error interno del servidor'
  /api/users/{uid}/:
    get:
      summary: Obtener un usuario
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario a obtener
          schema:
            type: string
      responses:
        '200':
          description: 'Usuario encontrado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: 'User not found'
    put:
      summary: Actualizar un usuario existente
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario a actualizar
          schema:
            type: string
      requestBody:
          $ref: '#/components/requestBodies/updateUser'
      responses:
        '200':
          description: 'User updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: 'User not found'
    delete:
      summary: Eliminar un usuario
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario a eliminar
          schema:
            type: string
      responses:
        '204':
          description: 'User deleted'

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID del usuario en mongoDB
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Correo electrónico del usuario
        password:
          type: string
          description: Contraseña del usuario
        role:
          type: string
          description: Rol del usuario
      example:
        _id: '843b9vi15da7qr'
        first_name: Pedro
        last_name: Pérez
        email: pedro.perez@gmail.com
        password: contraseña
        role: user
  requestBodies:
    updateUser:
      type: object
      properties:
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Correo electrónico del usuario
        password:
          type: string
          description: Contraseña del usuario
        role:
          type: string
          description: Rol del usuario
      example:
        first_name: Pedro
        last_name: Pérez
        email: pedro.perez@gmail.com
        password: contraseña
        role: admin
